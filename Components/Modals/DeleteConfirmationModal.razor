@using CFDTrollo.Models
@using CFDTrollo.Components.UI

@if (IsOpen)
{
    <BaseModal OnClose="OnClose" CloseOnBackdropClick="false">
        <div class="p-6">
            <!-- Header with Icon -->
            <div class="flex items-center gap-4 mb-6">
                <div class="flex-shrink-0 w-12 h-12 bg-red-100 rounded-full flex items-center justify-center">
                    <svg class="w-6 h-6 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                    </svg>
                </div>
                <div class="flex-1">
                    <h2 class="text-xl font-semibold text-foreground">@Title</h2>
                    <p class="text-sm text-muted-foreground mt-1">This action cannot be undone.</p>
                </div>
            </div>

            <!-- Content -->
            <div class="mb-6">
                <p class="text-foreground leading-relaxed">
                    @Message
                </p>
                
                @if (!string.IsNullOrEmpty(Details))
                {
                    <div class="mt-4 p-4 bg-muted/30 rounded-lg border border-border">
                        <p class="text-sm text-muted-foreground">@Details</p>
                    </div>
                }
            </div>

            <!-- Action Buttons -->
            <div class="flex justify-end gap-3">
                <button @onclick="OnClose"
                        class="px-6 py-2.5 text-muted-foreground hover:text-foreground transition-colors font-medium rounded-lg hover:bg-muted/50">
                    Cancel
                </button>
                <button @onclick="HandleConfirm"
                        class="px-6 py-2.5 bg-red-600 hover:bg-red-700 text-white rounded-lg transition-all font-medium shadow-sm hover:shadow-md focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2">
                    @ConfirmButtonText
                </button>
            </div>
        </div>
    </BaseModal>
}

@code {
    [Parameter] public bool IsOpen { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public EventCallback OnConfirm { get; set; }
    [Parameter] public string Title { get; set; } = "Confirm Deletion";
    [Parameter] public string Message { get; set; } = "Are you sure you want to delete this item?";
    [Parameter] public string? Details { get; set; }
    [Parameter] public string ConfirmButtonText { get; set; } = "Delete";

    private async Task HandleConfirm()
    {
        await OnConfirm.InvokeAsync();
        await OnClose.InvokeAsync();
    }
}
