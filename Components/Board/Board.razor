@using CFDTrollo.Models
@using CFDTrollo.Data
@using CFDTrollo.Services
@using CFDTrollo.Components.Modals
@using CFDTrollo.Components.UI
@implements IDisposable

<div class="min-h-screen bg-board">
    <main class="p-6 md:p-8 overflow-x-auto">
        <div id="board-lists" class="board-container flex gap-4 md:gap-6 items-start min-h-[200px] pb-4 w-max" @ref="boardListsElement" data-board-id="main-board">
            @foreach (var (list, index) in boardState.Lists.Select((list, index) => (list, index)))
            {
                <ListComponent List="@list" 
                               Index="@index" 
                               OnAddCard="@HandleAddCard" 
                               OnUpdateCard="@HandleUpdateCard"
                               OnDeleteList="@(() => HandleDeleteList(list.Id))"
                               OnDeleteCard="@HandleDeleteCard" />
            }
        </div>
    </main>
    
    <!-- Horizontal line at bottom -->
    <div class="border-t border-border/50 mx-4"></div>

    <!-- Floating Add List Button - Bottom Right -->
    <button @onclick="HandleQuickAddList"
            class="fixed bottom-6 right-6 bg-primary hover:bg-primary/90 text-primary-foreground rounded-full p-4 shadow-lg hover:shadow-xl transition-all duration-200 flex items-center justify-center w-14 h-14 z-50"
            title="Add New List">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
        </svg>
    </button>
    
    <!-- Debug Toggle Button -->
    <button @onclick="ToggleDebugInfo"
            class="fixed bottom-6 right-24 bg-purple-600 hover:bg-purple-700 text-white rounded-full p-4 shadow-lg hover:shadow-xl transition-all duration-200 flex items-center justify-center w-14 h-14 z-50"
            title="Toggle Debug Info">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
        </svg>
    </button>
    
    <!-- Test Button -->
    <button @onclick="TestDragDrop"
            class="fixed bottom-6 right-36 bg-green-600 hover:bg-green-700 text-white rounded-full p-4 shadow-lg hover:shadow-xl transition-all duration-200 flex items-center justify-center w-14 h-14 z-50"
            title="Test Drag Drop">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
        </svg>
    </button>
</div>

<!-- Debug Information Panel -->
@if (showDebugInfo)
{
    <div class="fixed top-4 right-4 bg-black/90 text-white p-4 rounded-lg shadow-lg z-50 max-w-md max-h-96 overflow-y-auto">
        <div class="flex items-center justify-between mb-2">
            <h3 class="font-bold text-sm">Debug Info</h3>
            <button @onclick="ToggleDebugInfo" class="text-white hover:text-gray-300">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
            </button>
        </div>
        <div class="text-xs space-y-2">
            <div><strong>Lists:</strong> @boardState.Lists.Count</div>
            <div><strong>Total Cards:</strong> @boardState.Lists.Sum(l => l.Cards.Count)</div>
            @foreach (var (list, listIndex) in boardState.Lists.Select((list, index) => (list, index)))
            {
                <div class="ml-2 border-l-2 border-green-400 pl-2">
                    <div><strong>List @(listIndex + 1):</strong> @list.Title</div>
                    <div class="text-gray-300">ID: @list.Id</div>
                    <div class="text-gray-300">Cards: @list.Cards.Count</div>
                    @foreach (var (card, cardIndex) in list.Cards.Select((card, index) => (card, index)))
                    {
                        <div class="ml-4 border-l-2 border-blue-400 pl-2 mt-1">
                            <div><strong>Card @(cardIndex + 1):</strong> @card.Title</div>
                            <div class="text-gray-300">ID: @card.Id</div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
}

<!-- Delete Confirmation Modal -->
<DeleteConfirmationModal IsOpen="@isDeleteModalOpen" 
                        OnClose="@(() => isDeleteModalOpen = false)" 
                        OnConfirm="@HandleConfirmDelete"
                        Title="@deleteModalTitle"
                        Message="@deleteModalMessage"
                        Details="@deleteModalDetails" />

